{% set name = "ceres-solver" %}
{% set version = "2.1.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: http://ceres-solver.org/{{ name }}-{{ version }}.tar.gz
  sha256: f7d74eecde0aed75bfc51ec48c91d01fe16a6bf16bce1987a7073286701e2fc6

build:
  number: 1
  # suitesparse, gflags, glog aren't available on s390x
  skip: true  # [s390x]
  run_exports:
    - {{ pin_subpackage('ceres-solver', max_pin='x.x') }}
    - {{ pin_compatible('eigen', max_pin='x.x.x') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - make   # [not win]
    - ninja  # [win]
    # This has a strong run_export so we don't need to put it in `host` or `run`
    # We use llvm-openmp for openblas variants on osx.
    - llvm-openmp                     # [osx and not (blas_impl == "mkl")]
  host:
    - glog 0.5.0
    - gflags 2.2.2
    # OpenBLAS or MKL
    - mkl-devel {{ mkl }}.*           # [blas_impl == "mkl"]
    - mkl {{ mkl }}.*                 # [blas_impl == "mkl"]
    - openblas {{ openblas }}         # [blas_impl == "openblas"]
    # For openblas on win and linux, we don't specify any openmp implementation; it comes from the compiler.
    - intel-openmp   {{ mkl }}        # [blas_impl == "mkl"]
    - suitesparse 7.0.1
    - tbb 2021.*
    - eigen 3.3.7
  run:
    # OpenBLAS or MKL
    - mkl {{ mkl }}.*                 # [blas_impl == "mkl"]
    - libopenblas                     # [blas_impl == "openblas"]
    # OpenMP
    - {{ pin_compatible('intel-openmp') }}   # [blas_impl == "mkl"]
    # To stop the compiler pulling in an openmp implementation itself
    - _openmp_mutex                   # [linux]
    - glog >=0.5.0,<0.6.0a0
    - gflags >=2.2.2,<2.3.0a0
    - suitesparse >=7.0.1,<8.0a0
    - tbb >=2021.3.0,<2022.0a0
    - eigen >=3.3.7,<3.4.0a0

test:
  commands:
    - test -f ${PREFIX}/include/ceres/ceres.h  # [unix]
    - test -f ${PREFIX}/lib/libceres${SHLIB_EXT}  # [unix]
    - if not exist %PREFIX%\\Library\\include\\ceres\\ceres.h exit 1  # [win]
    - if not exist %PREFIX%\\Library\\lib\\ceres.lib exit 1  # [win]
    # Disable this test for now, as it fails on windows 
    # because we disable shared libraries by a flag `-DBUILD_SHARED_LIBS=OFF`
    #- if not exist %PREFIX%\\Library\\bin\\ceres.dll exit 1  # [win]

about:
  # HTTPS isn't supported by the ceres-solver.org website
  home: http://ceres-solver.org
  dev_url: https://github.com/ceres-solver/ceres-solver
  doc_url: http://ceres-solver.org/
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: A large scale non-linear optimization library
  description: |
    Ceres Solver 1 is an open source C++ library for modeling and solving large, complicated optimization problems. 
    It can be used to solve Non-linear Least Squares problems with bounds constraints and general unconstrained optimization problems. 
    It is a mature, feature rich, and performant library that has been used in production at Google since 2010. 

extra:
  recipe-maintainers:
    - jschueller
    - seanyen
  skip-lints:
    - http_url
