{% set name = "ceres-solver" %}
{% set version = "2.2.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: http://ceres-solver.org/{{ name }}-{{ version }}.tar.gz
  sha256: 48b2302a7986ece172898477c3bcd6deb8fb5cf19b3327bc49969aad4cede82d

build:
  number: 0
  # suitesparse, gflags, glog aren't available on s390x
  skip: true  # [s390x]
  run_exports:
    - {{ pin_subpackage('ceres-solver', max_pin='x.x') }}
    - {{ pin_compatible('eigen', max_pin='x.x.x') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - make   # [not win]
    - ninja  # [win]
    # This has a strong run_export so we don't need to put it in `host` or `run`
    # We use llvm-openmp for openblas variants on osx.
    - llvm-openmp                     # [osx and not (blas_impl == "mkl")]
  host:
    - glog 0.5.0
    - gflags 2.2.2
    # OpenBLAS or MKL
    - mkl-devel {{ mkl }}.*           # [blas_impl == "mkl"]
    - mkl {{ mkl }}.*                 # [blas_impl == "mkl"]
    - openblas {{ openblas }}         # [blas_impl == "openblas"]
    # For openblas on win and linux, we don't specify any openmp implementation; it comes from the compiler.
    - intel-openmp {{ mkl }}          # [blas_impl == "mkl"]
    - suitesparse 7.8.3
    - tbb 2022.*
    - eigen 3.3.7
  run:
    # OpenBLAS or MKL
    - mkl {{ mkl }}.*                 # [blas_impl == "mkl"]
    - libopenblas                     # [blas_impl == "openblas"]
    # OpenMP
    - {{ pin_compatible('intel-openmp') }}   # [blas_impl == "mkl"]
    # To stop the compiler pulling in an openmp implementation itself
    - _openmp_mutex                   # [linux]
    - glog >=0.5.0,<0.6.0a0
    - gflags >=2.2.2,<2.3.0a0
    - {{ pin_compatible('suitesparse') }}
    - {{ pin_compatible('tbb') }}
    - eigen >=3.3.7,<3.4.0a0

test:
  commands:
    - test -f ${PREFIX}/include/ceres/ceres.h  # [unix]
    - test -f ${PREFIX}/lib/libceres${SHLIB_EXT}  # [unix]
    - if not exist %PREFIX%\\Library\\include\\ceres\\ceres.h exit 1  # [win]
    - if not exist %PREFIX%\\Library\\lib\\ceres.lib exit 1  # [win]
    - if not exist %PREFIX%\\Library\\bin\\ceres.dll exit 1  # [win]

about:
  # HTTPS isn't supported by the ceres-solver.org website
  home: http://ceres-solver.org
  dev_url: https://github.com/ceres-solver/ceres-solver
  doc_url: http://ceres-solver.org/
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: A large scale non-linear optimization library
  description: |
    Ceres Solver is an open source C++ library for modeling and solving large, complicated optimization problems. It
    is a feature rich, mature and performant library which has been used in production at Google since 2010. Ceres
    Solver can solve two kinds of problems.

extra:
  recipe-maintainers:
    - jschueller
    - seanyen
  skip-lints:
    - http_url
